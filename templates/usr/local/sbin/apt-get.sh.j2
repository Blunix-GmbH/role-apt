#!/bin/bash
#
# Crude way to patch /usr/bin/apt-get to wait for other dpkg related commands to finish
# This is still dangerous as apt itself throws errors during processing a new package:
# $ apt install atop
# [...works so far...]
# Processing triggers for man-db (2.7.6.1-2) ...
# E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)
# E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?



wait=false

check_apt_wait() {
    fuser /var/lib/dpkg/lock >/dev/null 2>&1 && wait=true
    fuser /var/lib/apt/lists/lock >/dev/null 2>&1 && wait=true
    fuser /var/log/unattended-upgrades/unattended-upgrades.log >/dev/null 2>&1 && wait=true
    ps aux | \
        grep -v grep | \
        grep -v "$0" | \
        grep -v ansible | \
        grep -v 'apt.systemd.daily' | \
        grep -v 'apt-key-gpghome' | \
        grep apt >/dev/null 2>&1 && \
        wait=true
}

check_apt_wait

if [[ "$wait" != "false" ]]; then
    echo "Waiting for another package manager"
    while [[ "$wait" != "false" ]]; do
        sleep $(printf "1.%01d\n" $(( RANDOM % 10 )))
        wait=false
        check_apt_wait
    done
    echo "Done waiting for another package manager"
fi

/usr/bin/apt-get "$@"
